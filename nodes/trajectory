#!/usr/bin/env python3

import rospy
import homework2.Figure8 as f8
from geometry_msgs.msg import Twist

class Trajectory:
    '''
    Publishes:  geometry_msgs/Twist message to cmd_vel
                nav_msgs/Path message to rviz?
    Broadcasts: static transform from world to odom 
    Services:   pause - stop turtle motion
                resume - resume turtle motion
    Parameters: width of figure 8
                height of figure 8
                period
                ~pub_freq
    '''

    def __init__(self):
        '''
        constructor
        '''
        #import parameters
        self.W = rospy.get_param("/width")
        self.H = rospy.get_param("/height")
        self.T = rospy.get_param("/period")

        #initialize publishers
        self.pub = rospy.Publisher('cmd_vel',Twist,queue_size=10)
        self.pub_freq = rospy.Rate(400)

    def turtle_twist(self,xdot,omega):
        '''
        converts velocity and angular velocity to geometry_msgs/Twist message
        args:       xdot - velocity
                    omega - angular velocity
        reuturns:   Twist message
        '''
        return Twist(linear = gmes.Vector3(x = xdot, y = 0, z = 0),
                    angular = gmes.Vector3(x = 0, y = 0, z = omega))

def main():
    '''
    main function to utilize class
    '''
    traj = Trajectory()
    rospy.init_node('trajectory')
    rospy.spin()

if __name__ == '__main__':
    try:
        main()
    except:
        rospy.ROSInterruptException