#!/usr/bin/env python3

import rospy
import tf2_ros as tf2
from visualization_msgs.msg import Marker, MarkerArray

class EEMarker:
    '''
    Class tracks arm end effector and publishes markers in rviz at its location
    Markers change size and shape depending on the sign of the x coordinate of the end effector
    
    Publishes:  visualization_msgs/Marker
    Parameters: L1 - length of link 1
                L2 - length of link 2
                T - Time to complete trajectory
    '''
    
    def __init__(self):
        '''
        constructor of EEMarker class
        initializes necessary parameters
        '''

        #import parameters
        self.L1 = rospy.get_param('L1')
        self.L2 = rospy.get_param('L2')
        self.T = rospy.get_param('T')

        #initialize publisher
        self.pub = rospy.Publisher('markers',MarkerArray,queue_size=10)
        self.rate = 10
        self.prate = rospy.Rate(self.rate)


def main():
    rospy.init_node('arm_marker') 
    em = EEMarker()


if __name__ == '__main__':
    try:
        main()
    except:
        rospy.ROSInterruptException